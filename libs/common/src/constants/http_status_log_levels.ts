import { HTTPStatusCodeType } from './http-status';
import { LOG_LEVELS_ENUM, LogLevelsType } from './log-levels';

export const HTTP_STATUS_LOG_LEVELS = {
  100: LOG_LEVELS_ENUM['VERBOSE'], // CONTINUE
  101: LOG_LEVELS_ENUM['VERBOSE'], // SWITCHING_PROTOCOLS
  102: LOG_LEVELS_ENUM['VERBOSE'], // PROCESSING
  103: LOG_LEVELS_ENUM['VERBOSE'], // EARLY_HINTS
  200: LOG_LEVELS_ENUM['INFO'], // OK
  201: LOG_LEVELS_ENUM['INFO'], // CREATED
  202: LOG_LEVELS_ENUM['INFO'], // ACCEPTED
  203: LOG_LEVELS_ENUM['INFO'], // NON_AUTHORITATIVE_INFORMATION
  204: LOG_LEVELS_ENUM['INFO'], // NO_CONTENT
  205: LOG_LEVELS_ENUM['INFO'], // RESET_CONTENT
  206: LOG_LEVELS_ENUM['INFO'], // PARTIAL_CONTENT
  300: LOG_LEVELS_ENUM['VERBOSE'], // AMBIGUOUS
  301: LOG_LEVELS_ENUM['VERBOSE'], // MOVED_PERMANENTLY
  302: LOG_LEVELS_ENUM['VERBOSE'], // FOUND
  303: LOG_LEVELS_ENUM['VERBOSE'], // SEE_OTHER
  304: LOG_LEVELS_ENUM['DEBUG'], // NOT_MODIFIED
  307: LOG_LEVELS_ENUM['VERBOSE'], // TEMPORARY_REDIRECT
  308: LOG_LEVELS_ENUM['VERBOSE'], // PERMANENT_REDIRECT
  400: LOG_LEVELS_ENUM['WARN'], // BAD_REQUEST
  401: LOG_LEVELS_ENUM['WARN'], // UNAUTHORIZED
  402: LOG_LEVELS_ENUM['WARN'], // PAYMENT_REQUIRED
  403: LOG_LEVELS_ENUM['WARN'], // FORBIDDEN
  404: LOG_LEVELS_ENUM['WARN'], // NOT_FOUND
  405: LOG_LEVELS_ENUM['WARN'], // METHOD_NOT_ALLOWED
  406: LOG_LEVELS_ENUM['WARN'], // NOT_ACCEPTABLE
  407: LOG_LEVELS_ENUM['WARN'], // PROXY_AUTHENTICATION_REQUIRED
  408: LOG_LEVELS_ENUM['WARN'], // REQUEST_TIMEOUT
  409: LOG_LEVELS_ENUM['WARN'], // CONFLICT
  410: LOG_LEVELS_ENUM['WARN'], // GONE
  411: LOG_LEVELS_ENUM['WARN'], // LENGTH_REQUIRED
  412: LOG_LEVELS_ENUM['WARN'], // PRECONDITION_FAILED
  413: LOG_LEVELS_ENUM['WARN'], // PAYLOAD_TOO_LARGE
  414: LOG_LEVELS_ENUM['WARN'], // URI_TOO_LONG
  415: LOG_LEVELS_ENUM['WARN'], // UNSUPPORTED_MEDIA_TYPE
  416: LOG_LEVELS_ENUM['WARN'], // REQUESTED_RANGE_NOT_SATISFIABLE
  417: LOG_LEVELS_ENUM['WARN'], // EXPECTATION_FAILED
  418: LOG_LEVELS_ENUM['DEBUG'], // I_AM_A_TEAPOT
  421: LOG_LEVELS_ENUM['ERROR'], // MISDIRECTED
  422: LOG_LEVELS_ENUM['ERROR'], // UNPROCESSABLE_ENTITY
  424: LOG_LEVELS_ENUM['ERROR'], // FAILED_DEPENDENCY
  428: LOG_LEVELS_ENUM['WARN'], // PRECONDITION_REQUIRED
  429: LOG_LEVELS_ENUM['ERROR'], // TOO_MANY_REQUESTS
  500: LOG_LEVELS_ENUM['ERROR'], // INTERNAL_SERVER_ERROR
  501: LOG_LEVELS_ENUM['ERROR'], // NOT_IMPLEMENTED
  502: LOG_LEVELS_ENUM['CRITICAL'], // BAD_GATEWAY
  503: LOG_LEVELS_ENUM['CRITICAL'], // SERVICE_UNAVAILABLE
  504: LOG_LEVELS_ENUM['CRITICAL'], // GATEWAY_TIMEOUT
  505: LOG_LEVELS_ENUM['ERROR'], // HTTP_VERSION_NOT_SUPPORTED
} as const;

export const HTTP_STATUS_LOG_LEVELS_MAP = new Map<
  HTTPStatusCodeType,
  LogLevelsType
>(
  Object.entries(HTTP_STATUS_LOG_LEVELS).map(
    ([key, value]) =>
      [parseInt(key) as HTTPStatusCodeType, value] as [
        HTTPStatusCodeType,
        LogLevelsType,
      ],
  ),
);
